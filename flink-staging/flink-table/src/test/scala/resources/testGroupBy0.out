== Abstract Syntax Tree ==
Select(GroupBy(Root(ArraySeq((word,String), (count,Integer))), 'word), 'word,('count).sum as 'count)

== Physical Execution Plan ==
Stage 6 : Data Source
	content : at org.apache.flink.api.scala.ExecutionEnvironment.fromElements
	Partitioning : RANDOM_PARTITIONED

	Stage 5 : Map
		content : Map at select('word as 'word,'count as 'count)
		ship_strategy: Forward
		exchange_mode : PIPELINED
		driver_strategy : Map
		Partitioning : RANDOM_PARTITIONED

		Stage 4 : Map
			content : Map at select('word as 'word,'count as 'intermediate.1)
			ship_strategy: Forward
			exchange_mode : PIPELINED
			driver_strategy : Map
			Partitioning : RANDOM_PARTITIONED

			Stage 3 : GroupCombine
				content : GroupReduce at Expression Aggregation: Aggregate(GroupBy(Select(Root(ArraySeq((word,String), (count,Integer))), 'word as 'word,'count as 'intermediate.1), 'word), (intermediate.1,SUM))
				ship_strategy: Forward
				exchange_mode : PIPELINED
				driver_strategy : Sorted Combine
				Partitioning : RANDOM_PARTITIONED

				Stage 2 : GroupReduce
					content : GroupReduce at Expression Aggregation: Aggregate(GroupBy(Select(Root(ArraySeq((word,String), (count,Integer))), 'word as 'word,'count as 'intermediate.1), 'word), (intermediate.1,SUM))
					ship_strategy: Hash Partition on [0]
					local_strategy : Sort (combining) on [0:ASC]
					exchange_mode : PIPELINED
					driver_strategy : Sorted Group Reduce
					Partitioning : RANDOM_PARTITIONED

					Stage 1 : Map
						content : Map at select('word,'intermediate.1 as 'count)
						ship_strategy: Forward
						exchange_mode : PIPELINED
						driver_strategy : Map
						Partitioning : RANDOM_PARTITIONED

						Stage 0 : Data Sink
							content : org.apache.flink.api.java.io.DiscardingOutputFormat
							ship_strategy: Forward
							exchange_mode : PIPELINED
							Partitioning : RANDOM_PARTITIONED

